==title:BLAS (FLENS Interface){flens::blas}==

==ul:begin==
-> FLENS interface for BLAS.
-> In native BLAS function names indicate what type of arguments are expected:
--> {@@cxxblas::gemv}{[gemv]} indicates that the function expects matrices that
    are <b>ge</b>neral matrices with full storage
--> {@@cxxblas::hemv}{[hemv]} indicates that the function expects matrices that
    are <b>he</b>rmitian matrices with full storage
--> {@@cxxblas::symv}{[symv]} indicates that the function expects matrices that
    are <b>sy</b>mmetric matrices with full storage
--> {@@cxxblas::trmv}{[trmv]} indicates that the function expects matrices that
    are <b>tr</b>iangular matrices with full storage
-> As FLENS defines corresponding matrix types
   {@@flens::GeMatrix}{[GeMatrix]}, {@@flens::GeMatrix}{[HeMatrix]},
   {@@flens::GeMatrix}{[SyMatrix]} and {@@flens::GeMatrix}{[TrMatrix]}
   we can move the type information from function names into the function
   signature:
--> The naming of BLAS functions simplifies
--> Functions like {@@cxxblas::gemv}{[gemv]}, {@@cxxblas::hemv}{[hemv]},
    {@@cxxblas::symv}{[symv]}, {@@cxxblas::trmv}{[trmv]} all become
    {@@flens::blas::mv}{[mv]} which is overloaded for different matrix/vector types
--> Functions like {@@cxxblas::gemm}{[gemm]}, {@@cxxblas::hemm}{[hemm]},
    {@@cxxblas::symm}{[symm]}, {@@cxxblas::trmm}{[trmm]} all become
    {@@flens::blas::mm}{[mm]} which is overloaded for different matrix types
--> ...
-> All functions reside in the sub-namespace [blas].
--> So we actually have
    {@@flens::blas::mv}{[blas::mv]}, {@@flens::blas::mm}{[blas::mm]}, ...
--> Take a guess:  If {@@cxxblas::her2k}{[her2k]} is a BLAS function what will
    be its counterpart in FLENS? Right: {@@flens::blas::r2k}{[blas::r2k]}
==ul:end==

==section:BLAS Functions==
Depending on operand types BLAS functions are subdivided into three levels.

==subsection:Level 1==
Defines vector-vector operations, e.g. vector copying, vector addition, dot
products, ...

In addition matrix-matrix operations like copying matrices, adding matrices.
That means operations where the complexity is of the same order as the
degrees of freedom of the arguments.


==toc:level1/==

==subsection:Level 2==
Defines matrix-vector operations, e.g. matrix-vector products.
==toc:level2/==

==subsection:Level 3==
Defines matrix-matrix operations, e.g. matrix-matrix products.
==toc:level3/==

