==title:CXXBLAS Typedefs{cxxblas::typedefs}==

Defines some useful types that are relevant or at least convenient for using BLAS functions. 


==section:Storage Order#StorageOrder==
Enumeration type for specifying the underlying storage order of matrices ({@cxxblas/concepts/storageorder}{more}).
==code:.cc==
enum StorageOrder {
    RowMajor,
    ColMajor
};
====

==section:Referencing Upper/Lower Parts of Matrices#StorageUpLo==
Enumeration type for specifying whether lower or upper parts of matrices are referenced.  This
is relevant for operations involving triangular, symmetric or hermitian matrices.
==code:.cc==
enum StorageUpLo {
    Upper,
    Lower
};
====

==section:Diag#Diag==
==code:.cc==
enum Diag {
    Unit,
    NonUnit
};
====

==section:Side#Side==
==code:.cc==
enum Side {
    Left = 0,
    Right = 1
};
====

==section:Transpose/Conjugate#Transpose==

==code:.cc==
enum Transpose {NoTrans=0, Conj=1, Trans=2, ConjTrans=3};
====


Values for the enum constants are defined such that [^] (xor bit operation) can be used to combine consecutive operations. 

For example: [Transpose(Trans^Conj)] gives [ConjTrans], ...



==section:Triangular Matrices with Unit/Non-Unit Diagonal#Diag==
Enumeration type for specifying whether the diagonal of a triangular matrix should be
assumed to contain only ones.
==code:.cc==
enum Diag {
    Unit,
    NonUnit
};
====


==section:Complex Numbers#ComplexFloat#ComplexDouble==
==code:.cc==
typedef std::complex<float>     ComplexFloat;
typedef std::complex<double>    ComplexDouble;
====
