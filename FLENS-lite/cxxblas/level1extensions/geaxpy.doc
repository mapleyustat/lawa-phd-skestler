==title:geaxpy{cxxblas::geaxpy}==
==ul:begin==
-> Computes on of the following operations
--> [$ B \leftarrow B + \alpha A $]
--> [$ B \leftarrow B + \alpha A^T $]
--> [$ B \leftarrow B + \alpha A^H $]
-> where
--> Matrices [A] and [B] are a general (i.e. not necessarily
   square or symmetric) matrices whose elements are stored in a
   {@@cxxblas::concepts::fullstorage}{full storage scheme}
   either in {@@cxxblas::concepts::storageorder}{row- or column major order}..
--> [alpha] is a scalar
-> The implementation internally calls {@@cxxblas::axpy}{axpy}.
-> Source code:
--> Browse header file: [@header]
--> Browse implementation: [@tccimpl]
==ul:end==

==section:Generic Implementation==
The interface of the generic implementation reads:

==coderef==
template <typename IndexType, typename ALPHA, typename MA, typename MB>
    void
    geaxpy(StorageOrder order,
           Transpose trans, IndexType m, IndexType n,
           const ALPHA &alpha, const MA *A, IndexType ldA,
           MB *B, IndexType ldB);
====

==subsection:Template Types==
==list:begin==
->[IndexType]:  Size and index type for vectors
->[ALPHA]:      Type of the scaling factor [alpha]
->[MA]:         Element type of matrix [A]
->[MB]:         Element type of matrix [B]
==list:end==

==subsection:Parameters==
==list:begin==
->[order]:  {@@cxxblas::typedefs#StorageOrder}{Enum constant} specifying the 
            {@@cxxblas::concepts::storageorder}{storage order} of matrix [A]
->[trans]:  {@@cxxblas::typedefs#Transpose}{Enum constant} specifying the type
            of operation to be performed.
->[m]:      Number of rows of matrix [B]
->[n]:      Number of columns of matrix [B]
->[alpha]:  Scaling factor [alpha]
->[A]:      Pointer to the first element of matrix [A]
->[ldA]:    {@@cxxblas::concepts::fullstorage#LeadingDimension}{Leading dimension}
            of matrix [A]
->[B]:      Pointer to the first element of matrix [B]
->[ldB]:    {@@cxxblas::concepts::fullstorage#LeadingDimension}{Leading dimension}
            of matrix [B]
==list:end==

