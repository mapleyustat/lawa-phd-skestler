:document:    lawa::applications::multitrees::testlocaloperator2d

__PhD thesis by S.K.__ - __Multitree based algorithms__ - __Tree based evaluation of a local operator in two dimensions__

Tree based evaluation of a local operator in two dimensions
-----------------------------------------------------------

Source file `applications/new_eval_scheme/test_local_operator2d.cpp`

We are now coming to the evaluation scheme $\textbf{Eval}$.
For testing, we consider the bilinear forms

___ LATEX ________________
   a(v_1 \otimes v_2,w_1 \otimes w_2) := a(v_1,w_1) \cdot a(v_2,w_2).
___________________________

Here, we do not only check the final result but also all intermediate steps that are described in detail in Section 6.4 and, in particular, Theorem 6.20.

To test that the evaluation scheme does what it is supposed to, we start from a sparse grid index set

___ LATEX ________________
   {\boldsymbol \Lambda^{(j)}} = \{ (\lambda_1,\lambda_2) : |\lambda_1| + |\lambda_2| \leq j  \}
___________________________

and add an (arbitrary) additional index $(\lambda_1^*,\lambda_2^*)$ to this set. Afterwards, we complete the set ${\boldsymbol \Lambda^{(j)}} \cup (\lambda_1^*,\lambda_2^*)$ to a multitree.

Afterwards, we compute reference solutions for intermediate results using the straightforward application of the bilinear form and compare it to the fast evaluation scheme \textbf{Eval}.

We may also test the linear complexity of \textbf{Eval}. In particular, by storing the (multitree) index sets from the MTree-AWGM, we may perform performance tests on these index sets which are of particular interest. We refer to Section 6.5.


:import: applications/new_eval_scheme/test_local_operator2d.cpp [brief]

:links:   PhD thesis by S.K. -> lawa::applications::home
          Multitree based algorithms -> lawa::applications::multitrees
          Tree based evaluation of a local operator in two dimensions -> lawa::applications::multitrees::testlocaloperator2d
